created 28 Seq
created 10 For
created 18 Fib
r1:{ 1 to 4 by 1 }:
(Seq)r1 instanceof For:true:
(Seq)r1 instanceof Fib:false:
r1.upperBound():4:
r2:{ 1 to 4 by -1 }:
(Seq)r2 instanceof For:true:
(Seq)r2 instanceof Fib:false:
r2.upperBound():1:
r3:{ 21 to 23 by 1 }:
(Seq)r3 instanceof For:true:
(Seq)r3 instanceof Fib:false:
r3.upperBound():23:
r4:{ 25 to 21 by -2 }:
(Seq)r4 instanceof For:true:
(Seq)r4 instanceof Fib:false:
r4.upperBound():25:
r5:{ 21 to 26 by 2 }:
(Seq)r5 instanceof For:true:
(Seq)r5 instanceof Fib:false:
r5.upperBound():26:
r6:{ 28 to 26 by 0 }:
(Seq)r6 instanceof For:true:
(Seq)r6 instanceof Fib:false:
r6.upperBound():28:
r7:{ 28 to 31 by 1 }:
(Seq)r7 instanceof For:true:
(Seq)r7 instanceof Fib:false:
r7.upperBound():31:
r8:{ 31 to 28 by -1 }:
(Seq)r8 instanceof For:true:
(Seq)r8 instanceof Fib:false:
r8.upperBound():31:
s6:{ 21 to 26 by 0 }:
(Seq)s6 instanceof For:true:
(Seq)s6 instanceof Fib:false:
s6.upperBound():21:
s7:{ 26 to 26 by 1 }:
(Seq)s7 instanceof For:true:
(Seq)s7 instanceof Fib:false:
s7.upperBound():26:
b1:< 2, 3 to 10 >:
(Seq)b1 instanceof For:false:
(Seq)b1 instanceof Fib:true:
b1.upperBound():10:
b2:< 0, 1 to 10 >:
(Seq)b2 instanceof For:false:
(Seq)b2 instanceof Fib:true:
b2.upperBound():10:
b3:< 2, 2 to 10 >:
(Seq)b3 instanceof For:false:
(Seq)b3 instanceof Fib:true:
b3.upperBound():10:
b4:< 2, 2 to 0 >:
(Seq)b4 instanceof For:false:
(Seq)b4 instanceof Fib:true:
b4.upperBound():0:
b5:< 0, -1 to -10 >:
(Seq)b5 instanceof For:false:
(Seq)b5 instanceof Fib:true:
b5.upperBound():-10:
b6:< -2, -3 to -10 >:
(Seq)b6 instanceof For:false:
(Seq)b6 instanceof Fib:true:
b6.upperBound():-10:
b7:< 2, -2 to 3 >:
(Seq)b7 instanceof For:false:
(Seq)b7 instanceof Fib:true:
b7.upperBound():3:
b8:< 0, 1 to 21 >:
(Seq)b8 instanceof For:false:
(Seq)b8 instanceof Fib:true:
b8.upperBound():21:
b9:< 2, -1 to 10 >:
(Seq)b9 instanceof For:false:
(Seq)b9 instanceof Fib:true:
b9.upperBound():10:
c1:< 0, -1 to 10 >:
(Seq)c1 instanceof For:false:
(Seq)c1 instanceof Fib:true:
c1.upperBound():10:
c2:< 0, 0 to 10 >:
(Seq)c2 instanceof For:false:
(Seq)c2 instanceof Fib:true:
c2.upperBound():10:
c3:< 0, 0 to -10 >:
(Seq)c3 instanceof For:false:
(Seq)c3 instanceof Fib:true:
c3.upperBound():-10:
c4:< 0, 0 to 0 >:
(Seq)c4 instanceof For:false:
(Seq)c4 instanceof Fib:true:
c4.upperBound():0:
c5:< 0, 1 to 0 >:
(Seq)c5 instanceof For:false:
(Seq)c5 instanceof Fib:true:
c5.upperBound():0:
c6:< 0, -1 to 0 >:
(Seq)c6 instanceof For:false:
(Seq)c6 instanceof Fib:true:
c6.upperBound():0:
c7:< 1, 0 to 10 >:
(Seq)c7 instanceof For:false:
(Seq)c7 instanceof Fib:true:
c7.upperBound():10:
c8:< -1, 0 to 10 >:
(Seq)c8 instanceof For:false:
(Seq)c8 instanceof Fib:true:
c8.upperBound():10:
c9:< -1, 0 to -10 >:
(Seq)c9 instanceof For:false:
(Seq)c9 instanceof Fib:true:
c9.upperBound():-10:
r1:{ 1 to 4 by 1 }:
(Seq)r1 instanceof For:true:
(Seq)r1 instanceof Fib:false:
r1.upperBound():4:
r2:{ 1 to 4 by -1 }:
(Seq)r2 instanceof For:true:
(Seq)r2 instanceof Fib:false:
r2.upperBound():1:
r3:{ 21 to 23 by 1 }:
(Seq)r3 instanceof For:true:
(Seq)r3 instanceof Fib:false:
r3.upperBound():23:
r4:{ 25 to 21 by -2 }:
(Seq)r4 instanceof For:true:
(Seq)r4 instanceof Fib:false:
r4.upperBound():25:
r5:{ 21 to 26 by 2 }:
(Seq)r5 instanceof For:true:
(Seq)r5 instanceof Fib:false:
r5.upperBound():26:
r6:{ 28 to 26 by 0 }:
(Seq)r6 instanceof For:true:
(Seq)r6 instanceof Fib:false:
r6.upperBound():28:
r7:{ 28 to 31 by 1 }:
(Seq)r7 instanceof For:true:
(Seq)r7 instanceof Fib:false:
r7.upperBound():31:
r8:{ 31 to 28 by -1 }:
(Seq)r8 instanceof For:true:
(Seq)r8 instanceof Fib:false:
r8.upperBound():31:
s6:{ 21 to 26 by 0 }:
(Seq)s6 instanceof For:true:
(Seq)s6 instanceof Fib:false:
s6.upperBound():21:
s7:{ 26 to 26 by 1 }:
(Seq)s7 instanceof For:true:
(Seq)s7 instanceof Fib:false:
s7.upperBound():26:
b1:< 2, 3 to 10 >:
(Seq)b1 instanceof For:false:
(Seq)b1 instanceof Fib:true:
b1.upperBound():10:
b2:< 0, 1 to 10 >:
(Seq)b2 instanceof For:false:
(Seq)b2 instanceof Fib:true:
b2.upperBound():10:
b3:< 2, 2 to 10 >:
(Seq)b3 instanceof For:false:
(Seq)b3 instanceof Fib:true:
b3.upperBound():10:
b4:< 2, 2 to 0 >:
(Seq)b4 instanceof For:false:
(Seq)b4 instanceof Fib:true:
b4.upperBound():0:
b5:< 0, -1 to -10 >:
(Seq)b5 instanceof For:false:
(Seq)b5 instanceof Fib:true:
b5.upperBound():-10:
b6:< -2, -3 to -10 >:
(Seq)b6 instanceof For:false:
(Seq)b6 instanceof Fib:true:
b6.upperBound():-10:
b7:< 2, -2 to 3 >:
(Seq)b7 instanceof For:false:
(Seq)b7 instanceof Fib:true:
b7.upperBound():3:
b8:< 0, 1 to 21 >:
(Seq)b8 instanceof For:false:
(Seq)b8 instanceof Fib:true:
b8.upperBound():21:
b9:< 2, -1 to 10 >:
(Seq)b9 instanceof For:false:
(Seq)b9 instanceof Fib:true:
b9.upperBound():10:
c1:< 0, -1 to 10 >:
(Seq)c1 instanceof For:false:
(Seq)c1 instanceof Fib:true:
c1.upperBound():10:
c2:< 0, 0 to 10 >:
(Seq)c2 instanceof For:false:
(Seq)c2 instanceof Fib:true:
c2.upperBound():10:
c3:< 0, 0 to -10 >:
(Seq)c3 instanceof For:false:
(Seq)c3 instanceof Fib:true:
c3.upperBound():-10:
c4:< 0, 0 to 0 >:
(Seq)c4 instanceof For:false:
(Seq)c4 instanceof Fib:true:
c4.upperBound():0:
c5:< 0, 1 to 0 >:
(Seq)c5 instanceof For:false:
(Seq)c5 instanceof Fib:true:
c5.upperBound():0:
c6:< 0, -1 to 0 >:
(Seq)c6 instanceof For:false:
(Seq)c6 instanceof Fib:true:
c6.upperBound():0:
c7:< 1, 0 to 10 >:
(Seq)c7 instanceof For:false:
(Seq)c7 instanceof Fib:true:
c7.upperBound():10:
c8:< -1, 0 to 10 >:
(Seq)c8 instanceof For:false:
(Seq)c8 instanceof Fib:true:
c8.upperBound():10:
c9:< -1, 0 to -10 >:
(Seq)c9 instanceof For:false:
(Seq)c9 instanceof Fib:true:
c9.upperBound():-10:
x:< 2, 2 to 10 >:
(Seq)x instanceof For:false:
(Seq)x instanceof Fib:true:
x.upperBound():10:
x:{ 25 to 21 by -2 }:
(Seq)x instanceof For:true:
(Seq)x instanceof Fib:false:
x.upperBound():25:
myprintr(r1,10)::
myprintr(r2,10)::
myprintr(r3,10)::
myprintr(r4,10)::
myprintr(r5,10)::
myprintr(s6,10):21 21 21 21 21 21 21 21 21 21 :
myprintr(s7,10)::
myprintb(b1,10):2 3 5 8 13 :
myprintb(b2,10):0 1 1 2 3 5 8 13 :
myprintb(b3,10):2 2 4 6 10 16 :
myprintb(b4,10):2 2 4 :
myprintb(b5,10)::
myprintb(b6,10)::
myprintb(b7,10):2 -2 0 -2 -2 -4 -6 -10 -16 -26 :
myprintb(b8,10):0 1 1 2 3 5 8 13 21 34 :
myprintb(b9,10):2 -1 1 0 1 1 2 3 5 8 :
myprintb(c1,10):0 -1 -1 -2 -3 -5 -8 -13 -21 -34 :
myprintb(c2,10):0 0 0 0 0 0 0 0 0 0 :
myprintb(c3,10)::
myprintb(c4,10):0 0 0 0 0 0 0 0 0 0 :
myprintb(c5,10):0 1 1 :
myprintb(c6,10):0 -1 -1 -2 -3 -5 -8 -13 -21 -34 :
myprintb(c7,10):1 0 1 1 2 3 5 8 13 :
myprintb(c8,10):-1 0 -1 -1 -2 -3 -5 -8 -13 -21 :
myprintb(c9,10)::
mycrossr(r1,r3)::
mycrossr(r1,r1)::
mycrossr(r3,r3)::
mycrossr(r3,r3)::
mycrossr(r1,r2)::
mycrossr(r2,r2)::
mycrossr(s7,r4)::
mycrossb(b1,b3):
   8 10
   8 16
   8 26
   13 16
   13 26
   13 42
   21 26
   21 42
   21 68
:
mycrossb(b3,b1):
   42 13
   42 21
   42 34
   68 21
   68 34
   68 55
   110 34
   110 55
   110 89
:
mycrossb(b1,b1):
   55 55
   55 89
   55 144
   144 89
   144 144
   144 233
   377 233
   377 377
   377 610
:
mycrossb(b8,b1):
   21 377
   21 610
   21 987
   34 610
   34 987
   34 1597
   55 987
   55 1597
   55 2584
:
mycrossb(b1,b8):
   1597 34
   1597 55
   1597 89
   2584 55
   2584 89
   2584 144
   4181 89
   4181 144
   4181 233
:
mycrossb(b2,b3):
   8 68
   8 110
   8 178
   13 110
   13 178
   13 288
   21 178
   21 288
   21 466
:
mycrossb(b3,b2):
   288 13
   288 21
   288 34
   466 21
   466 34
   466 55
   754 34
   754 55
   754 89
:
mycrossb(b1,b5)::
mycrossb(b4,b5)::
si.next():4181:
si.next():6765:
ForIt called past end
